ALGORITMOS DE ORDENAMIENTO: ANALISIS --José David Melo

1. BURBUJA
 1. Se toma un vector con varios valores
 2. Si el primer valor es mayor que el segundo
 3. Se intercambia de lugar el primer con el segundo valor
 4. Se continua hasta que se haya comparado todos los valores del vector (valor n-1) con (valor n)

2. INSERCION

 1. Se toma dos variables enteras i, j y una llamada 'aux'
 2. Se utiliza el ciclo for, con los parametros: i = 1, i que sea menor que el tamñano de la lista y se incremente i de a 1.
 (indice j es para explorar la sublista a[i-1]..a[0] buscando la posicion correcta del elemento destino) 
 3. j toma el valor de i
 4. Toma el valor i de la lista y se guarda en 'aux'
 5. Utilizando el condicional while para comprobar con el anterior en orden de la lista y el valor de 'aux'sea menor que de los de la izquierda.
 6. Se desplaza hacia la derecha y se pone 'aux'en su lugar.

3. QUICKSHORT
 1. Se toma una lista de enteros, variable 'izquierda' y otra 'derecha'y otra 'aux'
 2. El primer valor de la lista se toma como pivote = A(izquierda);
 3. i = izquierda, i realiza la busqueda de izquierda a derecha
 4. j = derecha, j realiza la busqueda de derecha a izquierda
 5. Se utiliza el ciclo while (i<j), y luego se utiliza otro while(A[i]<=pivote && i<j) i++; Para empezar a buscar un elemento mayor que i
 6. while(A[j]>pivote) j--; busca un elemento menor que el pivote
 7. Al no cruzarse se intercambian de lugar
 8. A[izq]=A[j]; se coloca el pivote en su lugar de forma que tendremos los menores a su izquierda y los mayores a su derecha
 9. A[j]=pivote; Luego utilizamos el condicional if si izquierda es menor que j-1
 10. if(izq<j-1)
      quicksort(A,izq,j-1); // ordenamos subarray izquierdo
 11.  if(j+1 <der) Luego utilizamos el condicional if si derecha es mayor que j+1
      quicksort(A,j+1,der); // ordenamos subarray derecho